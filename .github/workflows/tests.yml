name: tests

on:
  push:
    paths-ignore:
      - ".vscode/**"
      - ".github/**"
      - ".gitignore"
      - "LICENSE"
      - "README.md"
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      APP_NAME: ${{ vars.APP_NAME }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DATABASE_MACHINE_ID: ${{ vars.DATABASE_MACHINE_ID }}
      DATABASE_SALT_ROUNDS: ${{ vars.DATABASE_SALT_ROUNDS }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_ACCESS_TOKEN_EXPIRES_IN_MINUTES: ${{ vars.JWT_ACCESS_TOKEN_EXPIRES_IN_MINUTES }}
      JWT_REFRESH_TOKEN_EXPIRES_IN_DAYS: ${{ vars.JWT_REFRESH_TOKEN_EXPIRES_IN_DAYS }}
      DEVELOPMENT_HOST: ${{ vars.DEVELOPMENT_HOST }}
      DEVELOPMENT_PORT: ${{ vars.DEVELOPMENT_PORT }}
      DEVELOPMENT_TEST_PORT: ${{ vars.DEVELOPMENT_TEST_PORT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Install poetry
        run: pip install --upgrade poetry && poetry config virtualenvs.create false
      
      - name: Install dependencies
        run: poetry install --no-root
      
      - name: Run tests
        run: pytest --cov --cov-report=html
      
      - name: Store coverage files
        uses: actions/upload-artifact@v4
        with:
          path: htmlcov
          name: coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
